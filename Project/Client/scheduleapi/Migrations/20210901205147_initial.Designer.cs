// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scheduleapi;

namespace scheduleapi.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    [Migration("20210901205147_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActivitiesAPI.Models.Activity", b =>
                {
                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("GroupsAPI.Models.Group", b =>
                {
                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SpecialisationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SpecialisationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TutorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SpecialisationId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("GroupsAPI.Models.Specialisation", b =>
                {
                    b.Property<string>("SpecialisationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialisationId");

                    b.ToTable("Specialisation");
                });

            modelBuilder.Entity("GroupsAPI.Models.Subgroup", b =>
                {
                    b.Property<string>("SubgroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubgroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Subgroup");
                });

            modelBuilder.Entity("ScheduleAPI.Models.Schedule", b =>
                {
                    b.Property<string>("ScheduleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ActivityId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("GroupsAPI.Models.Group", b =>
                {
                    b.HasOne("ScheduleAPI.Models.Schedule", null)
                        .WithMany("Groups")
                        .HasForeignKey("ScheduleId");

                    b.HasOne("GroupsAPI.Models.Specialisation", "Specialisation")
                        .WithMany()
                        .HasForeignKey("SpecialisationId");

                    b.Navigation("Specialisation");
                });

            modelBuilder.Entity("GroupsAPI.Models.Subgroup", b =>
                {
                    b.HasOne("GroupsAPI.Models.Group", "Group")
                        .WithMany("Subgroups")
                        .HasForeignKey("GroupId");

                    b.HasOne("ScheduleAPI.Models.Schedule", null)
                        .WithMany("Subgroups")
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ScheduleAPI.Models.Schedule", b =>
                {
                    b.HasOne("ActivitiesAPI.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("GroupsAPI.Models.Group", b =>
                {
                    b.Navigation("Subgroups");
                });

            modelBuilder.Entity("ScheduleAPI.Models.Schedule", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Subgroups");
                });
#pragma warning restore 612, 618
        }
    }
}
